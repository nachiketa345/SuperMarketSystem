@page "/addproduct"

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase
<h3>Add Product</h3>

@if(product != null)
{
    <EditForm Model="product" OnInvalidSubmit="OnValidSumit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Category</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>

        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

         <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>
   
        <button type="button" class="btn btn-primary" @onclick="OnSave">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    private Product product;
    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        categories = ViewCategoriesUseCase.Execute();
    }
    private void OnValidSumit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");

    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
    private void OnSave()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");

    }
}
